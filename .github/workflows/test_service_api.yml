# See: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

name: 'Test Service: API Integration'

on:
  workflow_dispatch:
  pull_request:
    branches:
      - 'main'
      - 'feat.*'
    paths:
      - '.github/workflows/test_service_api.yml'
      - '.github/actions/build-service/action.yml'
      - 'services/.env.example'
      - 'services/121-service/**'
      - '!**.md'
  push:
    branches:
      - 'release/*'
    paths:
      - '.github/workflows/test_service_api.yml'
      - '.github/actions/build-service/action.yml'
      - 'services/.env.example'
      - 'services/121-service/**'
      - '!**.md'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set ENV-variables for test-environment
        run: |
          cp ./services/.env.example services/.env
          /bin/sed -i '/^NODE_ENV=/s/=.*/=development/' ./services/.env
          /bin/sed -i '/^PORT_121_SERVICE=/s/=.*/=3000/' ./services/.env
          /bin/sed -i '/^EXTERNAL_121_SERVICE_URL=/s/=.*/=http:\/\/localhost:3000\//' ./services/.env
          /bin/sed -i '/^GENERIC_THROTTLING_LIMIT=/s/=.*/=1200/' ./services/.env
          /bin/sed -i '/^HIGH_THROTTLING_LIMIT=/s/=.*/=100/' ./services/.env
          /bin/sed -i '/^POSTGRES_HOST=/s/=.*/=121db/' ./services/.env
          /bin/sed -i '/^POSTGRES_USER=/s/=.*/=global121/' ./services/.env
          /bin/sed -i '/^POSTGRES_PASSWORD=/s/=.*/=global121/' ./services/.env
          /bin/sed -i '/^POSTGRES_DBNAME=/s/=.*/=global121/' ./services/.env
          /bin/sed -i '/^REDIS_HOST=/s/=.*/=121queue/' ./services/.env
          /bin/sed -i '/^REDIS_PORT=/s/=.*/=6379/' ./services/.env
          /bin/sed -i '/^REDIS_PREFIX=/s/=.*/=test/' ./services/.env
          /bin/sed -i '/^RESET_SECRET=/s/=.*/=reset-secret/' ./services/.env
          /bin/sed -i '/^SECRETS_121_SERVICE_SECRET=/s/=.*/=token-secret/' ./services/.env
          /bin/sed -i '/^TWILIO_SID=/s/=.*/=AC/' ./services/.env
          /bin/sed -i '/^TWILIO_AUTHTOKEN=/s/=.*/=abc/' ./services/.env
          /bin/sed -i '/^TWILIO_WHATSAPP_NUMBER=/s/=.*/=15005550006/' ./services/.env
          /bin/sed -i '/^MOCK_TWILIO=/s/=.*/=TRUE/' ./services/.env
          /bin/sed -i '/^MOCK_SERVICE_URL=/s/=.*/=http:\/\/mock-service:3001\//' ./services/.env
          /bin/sed -i '/^INTERSOLVE_USERNAME=/s/=.*/=test/' ./services/.env
          /bin/sed -i '/^INTERSOLVE_PASSWORD=/s/=.*/=test/' ./services/.env
          /bin/sed -i '/^MOCK_INTERSOLVE=/s/=.*/=TRUE/' ./services/.env
          /bin/sed -i '/^MOCK_VODACASH=/s/=.*/=TRUE/' ./services/.env
          /bin/sed -i '/^MOCK_COMMERCIAL_BANK_ETHIOPIA=/s/=.*/=TRUE/' ./services/.env

      - name: Run Services with Docker
        working-directory: ./services
        run: |
          docker --log-level 'warn' compose -f docker-compose.yml up -d --quiet-pull

      - name: Wait for healthchecks
        run: |
          timeout 90s sh -c 'until docker ps | grep mock-service | grep -q healthy; do echo "Waiting for mock-service to be healthy..."; sleep 5; done'
          timeout 90s sh -c 'until docker ps | grep 121-service | grep -q healthy; do echo "Waiting for 121-service to be healthy..."; sleep 5; done'

      - name: Run API tests with Jest
        working-directory: ./services
        run: |
          docker compose exec 121-service npm run test:e2e:all

      - name: Docker logs
        if: always()
        uses: jwalton/gh-docker-logs@v2
